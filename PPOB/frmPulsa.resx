<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAA
        +QAAAPkBHYYEgQAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAALrSURBVFhHxZbN
        ThNRFMe704VhrQ/gEre4Y9q5bZ2ZIsZXwNcgbnwHWPIcJCaaWOhWoNNSSCpt4soYArZRY7ie/2kvnrlz
        KKB0vMkvae+cez7uxzmnZK29EUdRdG+4EkWDJNkcrCTvB42kR5xP6fEcfYMMZDUdGuqk5FO9/mjQiDdO
        GskZGbI3YSIbb2CtplOiToJ+ENyniN6QwpFv4BaMoAO6NBtAnezH8UPa0pai8O8gXWm1+lizlZsYxvEi
        LRrmlPwjx8/qX45rtci3l/nDkc/BuKMdVr6nxjyVNv8Yx5nf5bYr0C7Y/Up51A6CBzkHphdOXXiX0C7Y
        bjV8m3Fg8tT02/751Zr9tr1tT7e27PDFau67D2QgizVY63/HLnwMlm1qAj6KSfT0Zn1BBxS5MW61ZjqB
        b5BxA2t9mX4csQMdU9knkRJnuFlJBtHIMd7dVZ1g4/RNDqz15cgWO7BXDi5wF0qcXj0hiR8VxnhnJ+ME
        y9CcHLN266BSZicOa+Y1Lt+mJiTRohs3m3aw+pzBbzmu2iVHx4STexCGaWlaWFRBiRpl8wMjh787Goe1
        KjvQrpS/0gXkqqYK+rATXrRy4Nt1xkG3atgBygk/4ADKqSqowluejRoDc3wk2hqPdHoEe8HyxX9xwF1C
        50ChR3CSxGycj6Ac/Cz8ErpMCCgtnxb+DN35A3qG7UITkUvDDipK64Wm4pQqoTOOC0i2FworRvLsATlz
        QCLFlGNsPRWfjAPdMHxy6QCYV0OCZ0cZL2O8Y8w7Z/fSgXm0ZIjcN075/+xoaWkh5wBA64zuVVN2W3Dm
        /rbT/18U/aK0mXEAoHVG9woFmuLrQNTytkvjPWNe+vYyfxxonbl7JUVwBErRyWgGAc4ZcjLJSLDtfuSO
        3IQD7RK6V6kIRQTNBOo5SioMusJyFbhw8sx91EkJulc0kOjhNAMaSDJ45+6pzUKd1MCOoIdDG4VOBs0E
        DAFUNRQW5HakV2Q4TUceW/oNFjieBiXvmiQAAAAASUVORK5CYII=
</value>
  </data>
  <data name="pictureBox3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /mOY0gzBAAAAAElFTkSuQmCC
</value>
  </data>
</root>